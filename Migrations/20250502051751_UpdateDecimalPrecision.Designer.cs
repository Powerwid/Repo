// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaVentas.Data;

#nullable disable

namespace SistemaVentas.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250502051751_UpdateDecimalPrecision")]
    partial class UpdateDecimalPrecision
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SistemaVentas.Models.Entities.Carrito", b =>
                {
                    b.Property<int>("id_carrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_carrito"));

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("clientes_id_cliente")
                        .HasColumnType("int");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fecha_agregado")
                        .HasColumnType("datetime2");

                    b.Property<int>("producto_id_producto")
                        .HasColumnType("int");

                    b.HasKey("id_carrito");

                    b.HasIndex("clientes_id_cliente");

                    b.HasIndex("producto_id_producto");

                    b.ToTable("carrito", (string)null);
                });

            modelBuilder.Entity("SistemaVentas.Models.Entities.Categoria", b =>
                {
                    b.Property<int>("id_categoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_categoria"));

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_categoria");

                    b.ToTable("categoria", (string)null);
                });

            modelBuilder.Entity("SistemaVentas.Models.Entities.Clientes", b =>
                {
                    b.Property<int>("id_cliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_cliente"));

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fecha_venta")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("monto_total")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_cliente");

                    b.ToTable("clientes", (string)null);
                });

            modelBuilder.Entity("SistemaVentas.Models.Entities.Compras", b =>
                {
                    b.Property<int>("id_compra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_compra"));

                    b.Property<string>("estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("fecha_compra")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("monto_total")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("usuario_id_usuario")
                        .HasColumnType("int");

                    b.HasKey("id_compra");

                    b.HasIndex("usuario_id_usuario");

                    b.ToTable("compras", (string)null);
                });

            modelBuilder.Entity("SistemaVentas.Models.Entities.Comprobantes", b =>
                {
                    b.Property<int>("id_comprobante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_comprobante"));

                    b.Property<DateTime?>("fecha_emision")
                        .HasColumnType("datetime2");

                    b.Property<int>("nro_comprobante")
                        .HasColumnType("int");

                    b.Property<string>("tipo_comprobante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_comprobante");

                    b.ToTable("comprobantes", (string)null);
                });

            modelBuilder.Entity("SistemaVentas.Models.Entities.ComprobantesVentas", b =>
                {
                    b.Property<int>("id_comprobante_venta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_comprobante_venta"));

                    b.Property<int>("comprobantes_id_comprobante")
                        .HasColumnType("int");

                    b.Property<int>("ventas_id_venta")
                        .HasColumnType("int");

                    b.HasKey("id_comprobante_venta");

                    b.HasIndex("comprobantes_id_comprobante");

                    b.HasIndex("ventas_id_venta");

                    b.ToTable("comprobantes_ventas", (string)null);
                });

            modelBuilder.Entity("SistemaVentas.Models.Entities.DetalleCompra", b =>
                {
                    b.Property<int>("id_detalle_compra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_detalle_compra"));

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("compras_id_compra")
                        .HasColumnType("int");

                    b.Property<DateTime?>("fecha_devolucion")
                        .HasColumnType("datetime2");

                    b.Property<string>("metodo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("precio_unitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("producto_id_producto")
                        .HasColumnType("int");

                    b.HasKey("id_detalle_compra");

                    b.HasIndex("compras_id_compra");

                    b.HasIndex("producto_id_producto");

                    b.ToTable("detalle_compra", (string)null);
                });

            modelBuilder.Entity("SistemaVentas.Models.Entities.DetalleVentas", b =>
                {
                    b.Property<int>("id_detalle_venta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_detalle_venta"));

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<decimal>("precio_unitario")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("producto_id_producto")
                        .HasColumnType("int");

                    b.Property<decimal>("subtotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ventas_id_venta")
                        .HasColumnType("int");

                    b.HasKey("id_detalle_venta");

                    b.HasIndex("producto_id_producto");

                    b.HasIndex("ventas_id_venta");

                    b.ToTable("detalle_ventas", (string)null);
                });

            modelBuilder.Entity("SistemaVentas.Models.Entities.MovimientoInventario", b =>
                {
                    b.Property<int>("id_movimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_movimiento"));

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime?>("fecha_movimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("motivo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("producto_id_producto")
                        .HasColumnType("int");

                    b.Property<string>("tipo_movimiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_movimiento");

                    b.HasIndex("producto_id_producto");

                    b.ToTable("movimiento_inventario", (string)null);
                });

            modelBuilder.Entity("SistemaVentas.Models.Entities.Pagos", b =>
                {
                    b.Property<int>("id_pago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_pago"));

                    b.Property<DateTime?>("fecha_pago")
                        .HasColumnType("datetime2");

                    b.Property<string>("metodo_pago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("monto_pagado")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ventas_id_venta")
                        .HasColumnType("int");

                    b.HasKey("id_pago");

                    b.HasIndex("ventas_id_venta");

                    b.ToTable("pagos", (string)null);
                });

            modelBuilder.Entity("SistemaVentas.Models.Entities.Producto", b =>
                {
                    b.Property<int>("id_producto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_producto"));

                    b.Property<int>("categoria_id_categoria")
                        .HasColumnType("int");

                    b.Property<string>("descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("precio")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.HasKey("id_producto");

                    b.HasIndex("categoria_id_categoria");

                    b.ToTable("producto", (string)null);
                });

            modelBuilder.Entity("SistemaVentas.Models.Entities.Usuario", b =>
                {
                    b.Property<int>("id_usuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_usuario"));

                    b.Property<string>("apellido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contraseña")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("usuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id_usuario");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("SistemaVentas.Models.Entities.Ventas", b =>
                {
                    b.Property<int>("id_venta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id_venta"));

                    b.Property<int>("clientes_id_cliente")
                        .HasColumnType("int");

                    b.Property<int>("usuario_id_usuario")
                        .HasColumnType("int");

                    b.HasKey("id_venta");

                    b.HasIndex("clientes_id_cliente");

                    b.HasIndex("usuario_id_usuario");

                    b.ToTable("ventas", (string)null);
                });

            modelBuilder.Entity("SistemaVentas.Models.Entities.Carrito", b =>
                {
                    b.HasOne("SistemaVentas.Models.Entities.Clientes", "cliente")
                        .WithMany()
                        .HasForeignKey("clientes_id_cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaVentas.Models.Entities.Producto", "producto")
                        .WithMany()
                        .HasForeignKey("producto_id_producto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cliente");

                    b.Navigation("producto");
                });

            modelBuilder.Entity("SistemaVentas.Models.Entities.Compras", b =>
                {
                    b.HasOne("SistemaVentas.Models.Entities.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("usuario_id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("SistemaVentas.Models.Entities.ComprobantesVentas", b =>
                {
                    b.HasOne("SistemaVentas.Models.Entities.Comprobantes", "comprobante")
                        .WithMany()
                        .HasForeignKey("comprobantes_id_comprobante")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaVentas.Models.Entities.Ventas", "venta")
                        .WithMany()
                        .HasForeignKey("ventas_id_venta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("comprobante");

                    b.Navigation("venta");
                });

            modelBuilder.Entity("SistemaVentas.Models.Entities.DetalleCompra", b =>
                {
                    b.HasOne("SistemaVentas.Models.Entities.Compras", "compra")
                        .WithMany()
                        .HasForeignKey("compras_id_compra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaVentas.Models.Entities.Producto", "producto")
                        .WithMany()
                        .HasForeignKey("producto_id_producto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("compra");

                    b.Navigation("producto");
                });

            modelBuilder.Entity("SistemaVentas.Models.Entities.DetalleVentas", b =>
                {
                    b.HasOne("SistemaVentas.Models.Entities.Producto", "producto")
                        .WithMany()
                        .HasForeignKey("producto_id_producto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaVentas.Models.Entities.Ventas", "venta")
                        .WithMany()
                        .HasForeignKey("ventas_id_venta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("producto");

                    b.Navigation("venta");
                });

            modelBuilder.Entity("SistemaVentas.Models.Entities.MovimientoInventario", b =>
                {
                    b.HasOne("SistemaVentas.Models.Entities.Producto", "producto")
                        .WithMany()
                        .HasForeignKey("producto_id_producto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("producto");
                });

            modelBuilder.Entity("SistemaVentas.Models.Entities.Pagos", b =>
                {
                    b.HasOne("SistemaVentas.Models.Entities.Ventas", "venta")
                        .WithMany()
                        .HasForeignKey("ventas_id_venta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("venta");
                });

            modelBuilder.Entity("SistemaVentas.Models.Entities.Producto", b =>
                {
                    b.HasOne("SistemaVentas.Models.Entities.Categoria", "categoria")
                        .WithMany()
                        .HasForeignKey("categoria_id_categoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categoria");
                });

            modelBuilder.Entity("SistemaVentas.Models.Entities.Ventas", b =>
                {
                    b.HasOne("SistemaVentas.Models.Entities.Clientes", "cliente")
                        .WithMany()
                        .HasForeignKey("clientes_id_cliente")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaVentas.Models.Entities.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("usuario_id_usuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cliente");

                    b.Navigation("usuario");
                });
#pragma warning restore 612, 618
        }
    }
}
